
name: mCloud Infra
on:
#   schedule:
#     - cron:  '1 4 * * 1-5'
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Your Project Name'
        default: 'mcloud'
      environment:
        description: 'Project env'
        default: 'dev'
#       playbook:
#         description: 'Enter Playbook name'
#         default: 'lemp'
      options:
        description: 'Provide you ansible options'
        default: '-t base,user_mgmt -CD'
        
jobs:
  mCloud-Infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        #working-directory: /opt
        shell: bash
    env:
     GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
     #ANSIBLE_HOST_KEY_CHECKING: False
     ANSIBLE_CONFIG: "${GITHUB_WORKSPACE}/mcloud-ansible/inventory/ansible.cfg"
     ANSIBLE_INVENTORY: "inventory/hosts_${{ github.event.inputs.project_name }}"
     ANSIBLE_ROLES_PATH: ${GITHUB_WORKSPACE}/mcloud-ansible/playbook/roles:~/.ansible/roles
     ANSIBLE_WORKING_DIR: mcloud-infra/ansible
     ANSIBLE_OPTIONS: ${{ github.event.inputs.options }}
     TARGET_HOST: ${{ github.event.inputs.project_name }}_${{ github.event.inputs.environment }}
     #ANSIBLE_PLAYBOOK: ${{ github.event.inputs.playbook }}.yml
     ANSIBLE_PLAYBOOK: lemp.yml
     ANSIBLE_EXTRA_VARS: "project_environment=${{ github.event.inputs.project_name }} env_name=${{ github.event.inputs.environment }}"
     
             
    steps:
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
#       - name: Checkout ${ANSIBLE_WORKING_DIR} 
#         uses: actions/checkout@v2.4.0
#         with:
#           repository: HarryTheDevOpsGuy/mCloud-Users
#           path: mcloud-users
#           ref: main
#           ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      - name: info 
        run: |
          hostname
          hostname -I
          curl ifconfig.me
          free -h
          df -h
          ansible --version
          /opt/pipx/venvs/ansible-core/bin/python -m pip install prettytable 
  
      - name: mproject clone ${{ env.ANSIBLE_WORKING_DIR }}
        run: |
          git clone -b master git@bitbucket.org:devopsexpert/mcloud-infra.git ${GITHUB_WORKSPACE}/mcloud-infra
          git clone -b master git@bitbucket.org:devopsexpert/mcloud-ansible.git ${GITHUB_WORKSPACE}/mcloud-ansible
          

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'CUE4NTB0X'
          # For posting a simple plain text message
          #slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n Ansible Command : `ansible-playbook -u harry -e 'target_host=${{ env.TARGET_HOST }} ${{ env.ANSIBLE_EXTRA_VARS }}' '${{ env.ANSIBLE_OPTIONS }}' ${{ env.ANSIBLE_PLAYBOOK }}`"
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Hi Harry,\n*<fakeLink.toEmployeeProfile.com|Fred Enriquez - New device request>*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow:* `${{ github.workflow }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Build by:* `${{ github.actor }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Build No:* `${{ github.run_number }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Environment :* `${{ env.TARGET_HOST }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Playbook :* `${{ env.ANSIBLE_PLAYBOOK }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Args :* `${{ env.ANSIBLE_OPTIONS }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Action Ref:* `${{ git.action_ref }}`"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "emoji": true,
                        "text": "Approve"
                      },
                      "style": "primary",
                      "value": "click_me_123"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "emoji": true,
                        "text": "Deny"
                      },
                      "style": "danger",
                      "value": "click_me_123"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.DEFAULT_SLACK_TOKEN }}

      - name: Run ansible playbook
        working-directory: ${{ env.ANSIBLE_WORKING_DIR }}
        run: |
           if [[ ! -f ${ANSIBLE_INVENTORY} ]]; then
             export ANSIBLE_INVENTORY="/etc/ansible/hosts"
             export TARGET_HOST="127.0.0.1"
           fi     
           ansible-galaxy install -r ${GITHUB_WORKSPACE}/mcloud-ansible/playbook/ansible-pull-requirements.yml
           #ansible-playbook -e "target_host=127.0.0.1" lemp.yml -t 'pip_install_pkg' -vv
           ansible-playbook -u harry -e "target_host=${TARGET_HOST} ${ANSIBLE_EXTRA_VARS}" "${{ env.ANSIBLE_OPTIONS }}" ${ANSIBLE_PLAYBOOK}
           hostname
