# This is a basic workflow to help you get started with Actions

name: mProject Sync

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter Version'
        default: 'v0.1.0'
      command:
        description: 'Build Command'
        default: 'mproject -e msend:mcert --sync -tVy'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
   mProject-Sync:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: harry97/mcloud-toolkit:latest
      env:
        SLACK_CLI_TOKEN: ${{ secrets.DEFAULT_SLACK_TOKEN }}
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        RELEASE_VERSION: ${{ github.event.inputs.version }}
        COMMIT_MSG: 'NewBuild ${{ github.event.inputs.version }}'
        # CONF_YES: 'yes'
        BUILD_COMMAND: '${{ github.event.inputs.command }}'
        MPROJECT_DIR: '/tmp/mproject'
        MPROJECT_BRANCH: 'auto-release'
#         SENDGRID_API_KEY: ${{ secrets.DEFAULT_SENDGRID_TOKEN }}
#         EMAIL_FROM: mcloudautomation@gmail.com
#         EMAIL_MODE: SENDGRID
#         REPLY_EMAIL_ADDRESS: 'Harry <HarryTheDevOpsGuy@gmail.com>'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: mproject clone
        run: |
          git clone git@bitbucket.org:DevOps-Expert/mproject.git ${MPROJECT_DIR}

      - name: make release
        run: |
          cd ${MPROJECT_DIR}
          git checkout ${MPROJECT_BRANCH} || git checkout -b ${MPROJECT_BRANCH}
          bash ${BUILD_COMMAND}
